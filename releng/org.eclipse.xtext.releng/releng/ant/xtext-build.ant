<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     20.01.2012 09:55:02                                                        

     Local build    
     Executes xtext buckminster build on local machine
                   
     dhuebner                                                                
     ====================================================================== -->

<project name="xtext-build" default="run-buckminster-build">
	<description>
            Executes xtext buckminster build on local machine
    </description>

	<property name="WORKSPACE" location="${user.home}/buckminster-builds/xtext" />
	<property name="build.root" location="${WORKSPACE}/buildroot" />
	<property name="checkout.location" location="${ant.file}/../../../../../" />
	
	<!-- Debug session suspend on start? -->
	<property name="suspend.debug" value="n" />

	<import file="common.ant" as="common" />

	<!-- Locations -->
	<!-- Buckminster headless to use. Will be auto-installed if location is empty. See http://www.eclipse.org/buckminster/downloads.html -->
	<property name="buckminster.home" location="${user.home}/buckminster" />
	<property name="build.properties" location="${releng.project}/releng/xtext-build.properties" />
	<property name="temp.commands.location" location="${ant.file}/.." />

	<!-- Against which platform to build (Helios,Stable,Latest)-->
	<property name="ECLIPSE.TARGET.ALIAS" value="Stable" />
	<property name="WITH.MWE2" value="false" />
	<property name="SWTBOT" value="false" />
	<property name="DEV.BUILD" value="false" />
	<property name="JAVA8" value="false" />

	<!--
		Steps:
			Set API Baseline
			Materialize target platform
			Import xtext/xtend projects from ${checkout.location}
			Zip examples
			Compile java (build workspace)
			* Compile xtend (optional, off by default)
			Package (create p2 repository and zips)
	-->
	<target name="run-buckminster-build" depends="common.cleanup">
		<fail unless="buckminster.home" message="buckminster.home must be specified." />
		<antcall target="-buckminster-resolve" />
		<antcall target="buckminster-zip_examples-compile" />
		<!--  Enable to bootstrap re-compile Xtend files 
		<antcall target="compile-xtend" />
		-->
		<antcall target="buckminster-package" />
	</target>

	<target name="run-buckminster-build-dev" depends="common.cleanup">
		<fail unless="buckminster.home" message="buckminster.home must be specified." />
		<antcall target="-buckminster-resolve" />
		<antcall target="buckminster-dev-bootstrap" />
	</target>

	<target name="run-buckminster-tests" depends="common.cleanup">
		<fail unless="buckminster.home" message="buckminster.home must be specified." />
		<echo message="IMPORTANT: Populating an empty target platform may took over 10 minutes." />
		<echo message="eclipse.download: ${eclipse.download}" />
		<property name="commands.file" location="${temp.commands.location}/xtext-tests-cmd.txt" />
		<echo file="${commands.file}" append="false">
			importtargetdefinition -A "${releng.project}/releng/tests/tests-eclipseserver.target
			resolve "${releng.project}/releng/tests/xtext-test.mspec"
			resolve "${releng.project}/releng/tests-xtend/xtend-test.mspec"
			build
			#Xtext bootstrap
			#junit --stderr --stdout --launch "org.eclipse.xtext.junit4.tests/xtext.junit4.tests.launch" --flatXML --output "${WORKSPACE}/build-result/test-results/xtend.core.tests.fast.xml"
			#Xtend tests
			#junit --stderr --stdout --launch "org.eclipse.xtend.tests.java8/xtend.core.tests.java8.fast (xtend).launch" --flatXML --output "${WORKSPACE}/build-result/test-results//org.eclipse.xtend.core.tests.java8/xtend.core.tests.java8.fast.xml"
			junit --launch "org.eclipse.xtext.xtext.ui.graph.tests/xtext.xtext.ui.graph.tests.launch"  --flatXML --output "${WORKSPACE}/build-result/test-results/tests.fast.launch.xml"

		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="run-buckminster-swtbot" depends="common.cleanup">
		<fail unless="buckminster.home" message="buckminster.home must be specified." />
		<ant antfile="${checkout.location}/features/org.eclipse.xtext.build.feature/packaging.ant" target="resolve.variables">
			<property name="xtext.p2.repository" value="https://hudson.eclipse.org/xtext/job/xtext-xtend/lastSuccessfulBuild/artifact/build-result/p2.repository/" />
			<property name="eclipse.tp" value="file://${releng.project}/releng/mirroring/Kepler/final" />
			<property name="src.file" value="${releng.project}/releng/tests/swtbot-tests-buildserver.target" />
			<property name="dest.file" value="${releng.project}/releng/tests/swtbot-tests-buildserver-resolved.target" />
		</ant>
		<antcall target="buckminster-swtbot-tests">
			<param name="SWTBOT">true</param>
		</antcall>
	</target>

	<target name="run-buckminster-mwe2-generator-tests" depends="common.cleanup">
		<antcall target="-buckminster-resolve">
			<param name="WITH.MWE2">true</param>
		</antcall>
		<property name="commands.file" location="${temp.commands.location}/mwe2-generator-cmd.txt" />
		<echo file="${commands.file}" append="false">
			resolve "${releng.project}/releng/tests/xtext-test.mspec"
			build
			launch --stderr --stdout --launch "org.eclipse.xtext.language-generator/GenerateAllLanguages.mwe2.launch"

			build
			junit --launch "org.eclipse.xtext.tests/xtext.tests.launch" --flatXML --output "${WORKSPACE}/xtext.test.results/xtext.tests.xml"
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="-buckminster-resolve">
		<echo message="IMPORTANT: Populating an empty target platform may took over 10 minutes." />
		<echo message="eclipse.download: ${eclipse.download}" />
		<property name="commands.file" location="${temp.commands.location}/resolve-cmd.txt" />
		<echo file="${commands.file}" append="false">
			setpref targetPlatformPath="${build.root}/target.platform"
			#setpref org.eclipse.buckminster.core.maxParallelResolutions=1
			#setpref org.eclipse.buckminster.core.maxParallelMaterializations=1
			importprefs -F ${releng.project}/releng/buckminster.workspace.epf
			
			# Xtext api baseline
			importtargetdefinition "${releng.project}/api-baseline/api-baseline.target"
			addbaseline -A "api-baseline"
			
			# Xtext TP and sources
			resolve "${releng.project}/releng/xtext-platform.mspec"
			resolve "${releng.project}/releng/xtext.cquery"
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="buckminster-dev-bootstrap">
		<property name="DEV.BUILD" value="true" />
		<property name="commands.file" location="${temp.commands.location}/compile-dev-cmd.txt" />
		<property name="buckminster.workspace" value="${build.root}/buckminster.dev.workspace" />
		<echo file="${commands.file}" append="false">
			resolve "${releng.project}/releng/xtext-platform.mspec"
			build
			junit --stderr --stdout --launch "org.eclipse.xtext.releng/releng/bootstrap-dev-build.launch"  --flatXML --output "${WORKSPACE}/build-result/test-results/builder-dev-run.result.xml" 
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="buckminster-zip_examples-compile">
		<property name="commands.file" location="${temp.commands.location}/zip_examples-compile-cmd.txt" />
		<echo file="${commands.file}" append="false">
			perform "org.eclipse.xtext.build#zip.examples"
			build
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="compile-xtend">
		<property name="commands.file" location="${temp.commands.location}/compile-xtend-cmd.txt" />
		<echo file="${commands.file}" append="false">
			junit --stderr --stdout --launch "org.eclipse.xtext.releng/releng/bootstrap-build.launch"  --flatXML --output "${WORKSPACE}/build-result/test-results/builder-run.result.xml" 
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

	<target name="buckminster-package">
		<property name="commands.file" location="${temp.commands.location}/package-cmd.txt" />
		<echo file="${commands.file}" append="false">
			#perform "org.eclipse.xtext.releng#create.javadoc"
			perform "org.eclipse.xtext.build#build"
			perform "org.eclipse.xtext.releng#setup.promoter"
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
		<echo message=" " />
		<echo message="Updatesite output in: ${build.root}/buckminster.workspace/output/org.eclipse.xtext.build_*-eclipse.feature/zips/" />
	</target>

	<target name="buckminster-swtbot-tests">
		<echo message="eclipse.download: ${eclipse.download}" />
		<property name="commands.file" location="${temp.commands.location}/swtbot-cmd.txt" />
		<echo file="${commands.file}" append="false">
			importtargetdefinition -A "${releng.project}/releng/tests/swtbot-tests-buildserver-resolved.target
			resolve "${releng.project}/releng/tests-xtend/xtend-test.mspec"
			build
			junit --launch "org.eclipse.xtend.ide.swtbot.tests/xtend.ide.tests.slow (SWTBot).launch" --flatXML --output "${WORKSPACE}/xtend.test.results/xtend.ide.swtbot.tests.slow.xml"
		</echo>
		<echo message="build.properties: ${build.properties}" />
		<run_buckminster commandsfile="${commands.file}" propertiesfile="${build.properties}" />
	</target>

</project>
